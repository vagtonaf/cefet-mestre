timestamp: 2010-06-20T12:31:20.515000
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512)
);
success!
timestamp: 2010-06-20T12:31:20.515000
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2010-06-20T12:31:20.515000
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id REFERENCES auth_user(id) ON DELETE CASCADE,
    group_id REFERENCES auth_group(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.531000
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id REFERENCES auth_group(id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2010-06-20T12:31:20.562000
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id REFERENCES auth_user(id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2010-06-20T12:31:20.578000
CREATE TABLE administrador(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.578000
CREATE TABLE professor(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario REFERENCES auth_user(id) ON DELETE CASCADE,
    codigo_funcional CHAR(10) NOT NULL
);
success!
timestamp: 2010-06-20T12:31:20.578000
CREATE TABLE aluno(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario REFERENCES auth_user(id) ON DELETE CASCADE,
    matricula CHAR(10) NOT NULL
);
success!
timestamp: 2010-06-20T12:31:20.593000
CREATE TABLE instituicao(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(50) NOT NULL
);
success!
timestamp: 2010-06-20T12:31:20.593000
CREATE TABLE curso(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(50) NOT NULL,
    instituicao REFERENCES instituicao(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.609000
CREATE TABLE disciplina(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(50) NOT NULL,
    curso REFERENCES curso(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.609000
CREATE TABLE turma(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(50) NOT NULL,
    turno CHAR(512),
    disciplina REFERENCES disciplina(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.625000
CREATE TABLE alocacao(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    aluno REFERENCES aluno(id) ON DELETE CASCADE,
    turma REFERENCES turma(id) ON DELETE CASCADE,
    data TIMESTAMP
);
success!
timestamp: 2010-06-20T12:31:20.625000
CREATE TABLE taxionomia(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(512)
);
success!
timestamp: 2010-06-20T12:31:20.640000
CREATE TABLE dificuldade(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nivel CHAR(512)
);
success!
timestamp: 2010-06-20T12:31:20.656000
CREATE TABLE topico(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome CHAR(50) NOT NULL
);
success!
timestamp: 2010-06-20T12:31:20.671000
CREATE TABLE questao(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    enunciado TEXT NOT NULL,
    taxionomia REFERENCES taxionomia(id) ON DELETE CASCADE,
    dificuldade REFERENCES dificuldade(id) ON DELETE CASCADE,
    topico REFERENCES topico(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.671000
CREATE TABLE alternativa(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    questao REFERENCES questao(id) ON DELETE CASCADE,
    resposta TEXT NOT NULL,
    correta CHAR(1)
);
success!
timestamp: 2010-06-20T12:31:20.671000
CREATE TABLE plano_de_prova(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    referencia CHAR(50) NOT NULL,
    professor REFERENCES professor(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.687000
CREATE TABLE item_plano_de_prova(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    valor DOUBLE,
    plano_de_prova REFERENCES plano_de_prova(id) ON DELETE CASCADE,
    taxionomia REFERENCES taxionomia(id) ON DELETE CASCADE,
    dificuldade REFERENCES dificuldade(id) ON DELETE CASCADE,
    topico REFERENCES topico(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.687000
CREATE TABLE prova(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    referencia CHAR(50) NOT NULL,
    turma REFERENCES turma(id) ON DELETE CASCADE,
    plano_de_prova REFERENCES plano_de_prova(id) ON DELETE CASCADE,
    tipo CHAR(512),
    data_aplicacao TIMESTAMP
);
success!
timestamp: 2010-06-20T12:31:20.781000
CREATE TABLE prova_gerada(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    data TIMESTAMP,
    gerada CHAR(1),
    aluno REFERENCES aluno(id) ON DELETE CASCADE,
    prova REFERENCES prova(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.796000
CREATE TABLE item_prova_gerada(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    prova_gerada REFERENCES prova_gerada(id) ON DELETE CASCADE,
    questao REFERENCES questao(id) ON DELETE CASCADE,
    alternativa_escolhida REFERENCES alternativa(id) ON DELETE CASCADE
);
success!
timestamp: 2010-06-20T12:31:20.812000
CREATE TABLE plugin_tagging_tag(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name CHAR(512),
    counter INTEGER,
    created_by REFERENCES auth_user(id) ON DELETE CASCADE,
    created_on TIMESTAMP
);
success!
timestamp: 2010-06-20T12:31:20.812000
CREATE TABLE plugin_tagging_tag_link(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tag REFERENCES plugin_tagging_tag(id) ON DELETE CASCADE,
    table_name CHAR(512),
    record_id INTEGER
);
success!
