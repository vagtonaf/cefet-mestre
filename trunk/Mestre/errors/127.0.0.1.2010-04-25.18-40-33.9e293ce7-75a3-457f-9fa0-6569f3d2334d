(dp1
S'output'
p2
S''
sS'layer'
p3
S'C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\applications\\Mestre/controllers/relatorios.py'
p4
sS'code'
p5
S"# coding: utf8\n# try something like\nimport random\n\n\ndef index():\n    c_turmas=db().select(db.turma.ALL)\n    return { 'v_turmas' : c_turmas}\n\ndef rel_aluno_nota():\n    aluno_nota=[]\n    from applications.Mestre.modules.graf1 import gera_grafico   \n    turma_id = request.args[0]\n    query=(db.aluno.id == db.alocacao.aluno)&(db.turma.id==db.alocacao.turma)&(db.turma.id==turma_id)\n    alocacao = db(query).select(db.aluno.matricula)\n    print db(query)._select(db.aluno.matricula)\n    for aluno in alocacao:\n        novo_aluno = {'nome':aluno.matricula,'nota':random.random()*10}\n        aluno_nota.append(novo_aluno)\n        print novo_aluno \n    gera_grafico(aluno_nota,'Turma 01 - Notas','Alunos','Notas','applications/Mestre/static/turma01.png')\n    return dict(imagem = 'turma01.png')\n    \ndef graf_bar():\n    return dict()\n\ndef resultado_prova():\n    idAluno=request.args(0)\n    res = db(db.prova_gerada.aluno==idAluno).select(db.prova_gerada.ALL,\n                                        db.item_prova_gerada.ALL,\n        left=db.item_prova_gerada.on(db.item_prova_gerada.prova_gerada==db.prova_gerada.id))\n    for ss in res:\n        resposta = ss.item_prova_gerada\n        idProva = ss.prova_gerada.prova\n        alternativa=db(db.alternativa.questao==resposta.questao and db.alternativa.id==resposta.alternativa_escolhida).select(db.questao.ALL, db.alternativa.ALL, left=db.alternativa.on(db.alternativa.questao==db.questao.id))\n        for ssa in alternativa:\n            questao = ssa.questao\n            idTaxionomia = questao.taxionomia\n            idDificuldade = questao.dificuldadade\n            idTopico = questao.topico\n            prova = db(db.prova.id==idProva).select(db.prova.ALL)\n            for sss in prova:\n                idPlanoProva=sss.plano_de_prova\n                itemplanoprova=db(db.item_plano_de_prova.plano_de_prova==idPlanoProva and\n                            db.item_plano_de_prova.taxionomia==idTaxionomia and\n                            db.item_plano_de_prova.dificuldade==idDificuldade and\n                            db.item_plano_de_prova.topico==idTopico).select(db.item_plano_de_prova.ALL)\n    return dict(res=res, resposta=resposta, alternativa=alternativa, prova=prova, itemplanoprova=itemplanoprova)\n\nresponse._vars=response._caller(resultado_prova)\n"
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\gluon\\restricted.py", line 173, in restricted\n    exec ccode in environment\n  File "C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\applications\\Mestre/controllers/relatorios.py", line 50, in <module>\n  File "C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\gluon\\globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\applications\\Mestre/controllers/relatorios.py", line 39, in resultado_prova\n    idDificuldade = questao.dificuldadade\n  File "C:\\cefet\\2009.2,2010.1\\LocalHostWeb2Py\\cefet-mestre\\web2py\\gluon\\sql.py", line 664, in __getattr__\n    return dict.__getitem__(self,key)\nKeyError: \'dificuldadade\'\n'
p8
s.