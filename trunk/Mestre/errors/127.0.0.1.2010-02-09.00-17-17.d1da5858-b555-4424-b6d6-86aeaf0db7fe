(dp1
S'output'
p2
S''
sS'layer'
p3
S'D:\\cefet\\2009.2, 2010.1\\LocalHostWeb2Py\\MESTRE-20100209\\web2py\\applications\\Mestre/models/db_mestre.py'
p4
sS'code'
p5
S'is_phone = IS_MATCH(\'^(\\+\\d{2}\\-)?[\\d\\-]*(\\#\\d+)?$\')\n\nTASK_TYPES = (\'Phone\', \'Fax\', \'Mail\', \'Meet\')\nLISTA_TAXIONOMIA = (\'Analizar\',\'Compreender\',\'Lembrar\',\'Aplicar\',\'Avaliar\',\'Criar\')\n\nif auth.is_logged_in():\n   me=auth.user.id\nelse:\n   me=None\n\ndef advanced_editor(field, value):\n    return TEXTAREA(_id = str(field).replace(\'.\',\'_\'), _name=field.name, _class=\'text ckeditor\', value=value, _cols=80, _rows=10)\n    \nimport datetime; now=datetime.datetime.now()\n\ndb.define_table(\'professor\',\n        Field(\'usuario\',db.auth_user),\n        Field(\'codigo_funcional\',length=10,notnull=True)\n        )\ndb.professor.usuario.requires=IS_IN_DB(db,\'auth_user.id\',\'auth_user.first_name\')\ndb.professor.codigo_funcional.requires=IS_NOT_IN_DB(db, \'professor.codigo_funcional\') \n\ndb.define_table(\'aluno\',\n        Field(\'usuario\',db.auth_user),\n        Field(\'matricula\',length=10,notnull=True)\n        )\ndb.aluno.usuario.requires=IS_IN_DB(db,\'auth_user.id\',\'auth_user.first_name\',\'auth_user.last_name\')\ndb.aluno.matricula.requires=IS_NOT_IN_DB(db, \'aluno.matricula\') \n\ndb.define_table(\'instituicao\',\n        Field(\'nome\',length=50,notnull=True)\n        )\ndb.instituicao.nome.requires=IS_NOT_IN_DB(db, \'instituicao.nome\') \n        \ndb.define_table(\'curso\',\n        Field(\'nome\',length=50,notnull=True),\n        Field(\'turma\',\'string\',requires=IS_IN_SET(["MANH\xc3\x83","TARDE","NOITE"])),\n        Field(\'instituicao\',db.instituicao)\n        )\ndb.curso.instituicao.requires=IS_IN_DB(db,\'instituicao.id\',\'instituicao.nome\')\ndb.curso.nome.requires=[IS_NOT_IN_DB(db, \'curso.nome\'),IS_NOT_IN_DB(db, \'curso.turma\')] \n\n\ndb.define_table(\'disciplina\',\n        Field(\'nome\',length=50,notnull=True),\n        Field(\'curso\',db.curso)\n        )\ndb.disciplina.curso.requires=IS_IN_DB(db,\'curso.id\',\'curso.nome\')\n\ndb.define_table(\'turma\',\n        Field(\'nome\',length=50,notnull=True),\n        Field(\'disciplina\',db.disciplina)\n        )\ndb.turma.disciplina.requires=IS_IN_DB(db,\'disciplina.id\',\'disciplina.nome\')\ndb.turma.nome.requires=IS_NOT_IN_DB(db,\'turma.nome\')\n\n\ndb.define_table(\'alocacao\',\n        Field(\'aluno\',db.aluno),\n        Field(\'turma\',db.turma),\n        Field(\'data\',\'datetime\',default=request.now, writable=False)\n        )\ndb.alocacao.aluno.requires=IS_IN_DB(db,\'aluno.id\',\'aluno.matricula\',\'aluno.usuario.first_name\')\ndb.alocacao.turma.requires=IS_IN_DB(db,\'turma.id\',\'turma.nome\')\n\ndb.define_table(\'taxionomia\',\n        Field(\'nome\',\'string\',requires=IS_IN_SET(["Analizar","Compreender","Lembrar","Aplicar","Avaliar","Criar"]))\n        )\ndb.taxionomia.nome.requires=[IS_NOT_IN_DB(db,\'taxionomia.nome\'),IS_IN_SET(LISTA_TAXIONOMIA)]    \n\ndb.define_table(\'dificuldade\',\n        Field(\'nivel\',\'string\',requires=IS_IN_SET(["F\xc3\xa1cil","M\xc3\xa9dio","Dif\xc3\xadcil"]))\n        )\ndb.dificuldade.nivel.requires=IS_NOT_IN_DB(db,\'dificuldade.nivel\')         \n\ndb.define_table(\'topico\',\n        Field(\'nome\',length=50,notnull=True)\n        )\ndb.topico.nome.requires=IS_NOT_IN_DB(db, \'topico.nome\')     \n\ndb.define_table(\'questao\',\n        Field(\'enunciado\',\'text\',notnull=True),\n        Field(\'taxionomia\',db.taxionomia),\n        Field(\'dificuldade\',db.dificuldade),\n        Field(\'topico\',db.topico)\n        )\ndb.questao.taxionomia.requires=IS_IN_DB(db,\'taxionomia.id\',\'taxionomia.nome\')\ndb.questao.dificuldade.requires=IS_IN_DB(db,\'dificuldade.id\',\'dificuldade.nivel\')\ndb.questao.topico.requires=IS_IN_DB(db,\'topico.id\',\'topico.nome\')\ndb.questao.enunciado.requires=IS_NOT_IN_DB(db, \'questao.enunciado\') \n\ndb.define_table(\'alternativa\',\n        Field(\'questao\',db.questao),\n        Field(\'resposta\',\'text\',notnull=True),\n        Field(\'correta\',\'boolean\') \n        )\ndb.alternativa.questao.requires=IS_IN_DB(db,\'questao.id\',\'questao.enunciado\')\ndb.alternativa.resposta.requires=IS_NOT_IN_DB(db, \'alternativa.resposta\')\n\ndb.define_table(\'plano_de_prova\',\n        Field(\'referencia\',length=50,notnull=True),\n        Field(\'valor\',\'double\',default=10.0,requires=IS_FLOAT_IN_RANGE(0,10.0)),\n        Field(\'taxionomia\',db.taxionomia),\n        Field(\'dificuldade\',db.dificuldade),\n        Field(\'topico\',db.topico), \n        Field(\'professor\',db.professor)\n        )\ndb.plano_de_prova.taxionomia.requires=IS_IN_DB(db,\'taxionomia.id\',\'taxionomia.nome\')\ndb.plano_de_prova.dificuldade.requires=IS_IN_DB(db,\'dificuldade.id\',\'dificuldade.nivel\')\ndb.plano_de_prova.topico.requires=IS_IN_DB(db,\'topico.id\',\'topico.nome\')\ndb.plano_de_prova.professor.requires=IS_IN_DB(db,\'professor.id\',\'professor.codigo_funcional\')   \n      \n\ndb.define_table(\'prova\',\n        Field(\'referencia\',length=50,notnull=True),\n        Field(\'turma\',db.turma),\n        Field(\'plano_de_prova\',db.plano_de_prova.referencia),\n        Field(\'tipo\',\'string\',requires=IS_IN_SET(["P1","SCHP1","P2","SCHP2","P3","SCHP3","PF","SCHPF","PR",]))\n        )\ndb.prova.turma.requires=IS_IN_DB(db,\'turma.id\',\'turma.nome\')\ndb.prova.plano_de_prova.requires=IS_IN_DB(db,\'planoprova.referencia\',distinct=True) \ndb.prova.referencia.requires=IS_NOT_IN_DB(db, \'prova.referencia\') \n\ndb.define_table(\'prova_gerada\',\n        Field(\'data\',\'datetime\',default=request.now, writable=False),\n        Field(\'aluno\',db.aluno),\n        Field(\'prova\',db.prova),\n        Field(\'questao\',db.questao),\n        Field(\'alternativa_correta\',db.alternativa)\n        )       \ndb.prova_gerada.aluno.requires=IS_IN_DB(db,\'aluno.id\',\'aluno.matricula\')\ndb.prova_gerada.prova.requires=IS_IN_DB(db,\'prova.id\',\'prova.referencia\')\ndb.prova_gerada.questao.requires=IS_IN_DB(db,\'questao.id\',\'questao.enunciado\')\ndb.prova_gerada.alternativa_correta.requires=IS_IN_DB(db,\'alternativa.id\',\'alternativa.resposta\',db(db.alternativa.id==db.prova_gerada.questao))\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "D:\\cefet\\2009.2, 2010.1\\LocalHostWeb2Py\\MESTRE-20100209\\web2py\\gluon\\restricted.py", line 173, in restricted\n    exec ccode in environment\n  File "D:\\cefet\\2009.2, 2010.1\\LocalHostWeb2Py\\MESTRE-20100209\\web2py\\applications\\Mestre/models/db_mestre.py", line 118, in <module>\n    Field(\'tipo\',\'string\',requires=IS_IN_SET(["P1","SCHP1","P2","SCHP2","P3","SCHP3","PF","SCHPF","PR",]))\n  File "D:\\cefet\\2009.2, 2010.1\\LocalHostWeb2Py\\MESTRE-20100209\\web2py\\gluon\\sql.py", line 1260, in define_table\n    t._create(migrate=migrate, fake_migrate=fake_migrate)\n  File "D:\\cefet\\2009.2, 2010.1\\LocalHostWeb2Py\\MESTRE-20100209\\web2py\\gluon\\sql.py", line 1595, in _create\n    referenced = field.type[10:].strip()\nAttributeError: \'Expression\' object has no attribute \'strip\'\n'
p8
s.